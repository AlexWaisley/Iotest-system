@using System.Web
@using IOTEST.Methods
@using Newtonsoft.Json
@model (IoContext.User User,IoContext.Test Test, List<IoContext.LevelResult> Results)
@{
    ViewData["Title"] = $"IOTEST - {Model.Test.Name}";
    var finish = Model.Results.Any(x => x.Finish);
    string mark = null;
    var index = 0;
    if (finish)
    {
        mark = $"{GetMark.Calculate(Model.Results) * 100:F1}%";
    }
    else
    {
        if (Model.Results.Any())
        {
            index = Model.Results.Max(x => x.LevelIndex) + 1;
        }
    }
     string Base64Encode(string plainText) {
         return Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(plainText));
    }
}

@section ScriptsAfter
{

    <script src="~/lib/Pixijs/pixi.js"></script>
    <script src="~/js/TestCore.js" asp-append-version="true"></script>
    <script src="~/js/Test.js" asp-append-version="true" type="module"></script>
}

<header>
    <nav class="navbar navbar-dark" style="background-color:rgba(45, 51, 51, 0.50)">
        <div class="container-fluid ">
            <a class="navbar-brand user-select-none DOB d-none d-sm-block" href="/">
                <img src="~/Icons/144x144.png" alt="" width="35" height="35" class="d-inline-block align-top">
                <span>
                    Test
                </span>
            </a>
            <span class="DOB navbar-brand float-left ml-auto">
                <span class="mr-1">@Model.User.FirstName</span>
                <span class="mr-2">@Model.User.FamilyName</span>
                <img src="@Model.User.Image" alt="" width="35" height="35" class="d-inline-block align-top rounded-circle">
            </span>
        </div>
    </nav>
</header>


@{
    var test = JsonConvert.DeserializeObject<IoContext.Test>(JsonConvert.SerializeObject(Model.Test));
    var levels = Base64Encode(test.JsonData);
    test.JsonData = "";
    var testJson =Base64Encode(JsonConvert.SerializeObject(test));
}
@if (!test.Disabled)
{
    <script v-if="false">  
    
               const Base64={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(e){var t="";var n,r,i,s,o,u,a;var f=0;e=Base64._utf8_encode(e);while(f<e.length){n=e.charCodeAt(f++);r=e.charCodeAt(f++);i=e.charCodeAt(f++);s=n>>2;o=(n&3)<<4|r>>4;u=(r&15)<<2|i>>6;a=i&63;if(isNaN(r)){u=a=64}else if(isNaN(i)){a=64}t=t+this._keyStr.charAt(s)+this._keyStr.charAt(o)+this._keyStr.charAt(u)+this._keyStr.charAt(a)}return t},decode:function(e){var t="";var n,r,i;var s,o,u,a;var f=0;e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");while(f<e.length){s=this._keyStr.indexOf(e.charAt(f++));o=this._keyStr.indexOf(e.charAt(f++));u=this._keyStr.indexOf(e.charAt(f++));a=this._keyStr.indexOf(e.charAt(f++));n=s<<2|o>>4;r=(o&15)<<4|u>>2;i=(u&3)<<6|a;t=t+String.fromCharCode(n);if(u!=64){t=t+String.fromCharCode(r)}if(a!=64){t=t+String.fromCharCode(i)}}t=Base64._utf8_decode(t);return t},_utf8_encode:function(e){e=e.replace(/\r\n/g,"\n");var t="";for(var n=0;n<e.length;n++){var r=e.charCodeAt(n);if(r<128){t+=String.fromCharCode(r)}else if(r>127&&r<2048){t+=String.fromCharCode(r>>6|192);t+=String.fromCharCode(r&63|128)}else{t+=String.fromCharCode(r>>12|224);t+=String.fromCharCode(r>>6&63|128);t+=String.fromCharCode(r&63|128)}}return t},_utf8_decode:function(e){var t="";var n=0;var r=c1=c2=0;while(n<e.length){r=e.charCodeAt(n);if(r<128){t+=String.fromCharCode(r);n++}else if(r>191&&r<224){c2=e.charCodeAt(n+1);t+=String.fromCharCode((r&31)<<6|c2&63);n+=2}else{c2=e.charCodeAt(n+1);c3=e.charCodeAt(n+2);t+=String.fromCharCode((r&15)<<12|(c2&63)<<6|c3&63);n+=3}}return t}};
               window.Levels = JSON.parse(Base64.decode(('@Html.Raw(levels)')));               
               window.Test = JSON.parse(Base64.decode('@Html.Raw(testJson)'));
               window.Finish = @finish.ToString().ToLower();
               window.Mark = '@mark';
               window.Index = @index;
             </script>
}
else
{
    <script v-if="false">  
               window.Disabled=true;
             </script>
}

<div id="Page" class="user-select-none container-fluid" v-cloak>
    <div class="row mt-1">
        <div class="col-12 mx-auto col-sm-9 mt-1 col-lg-7 offset-xl-3 col-xl-6   DOB" style="background-color:rgba(45, 51, 51, 0.50)">
            @if (!test.Disabled)
            {
                <div v-if="Test">
                    <div v-show="PageNow===0">
                        <div id="head" class="text-left row pt-2">
                            <h4 class="text-light mt-2 col-8">{{Lang.TestTestingHead}}</h4>
                            <hr class="bg-light my-2"/>
                        </div>
                        <div id="startMain" class="text-center text-light">
                            <div>
                                <div id="startTextTitle">
                                    <h2>{{Test.Name}}</h2>
                                </div>
                                <hr>
                                <div id="startTextDescription">
                                    <h6>{{Test.Description}}</h6>
                                </div>
                                <hr>
                                <div id="startParams" class="d-flex justify-content-around mb-3">
                                    <button class="btn btn-outline-light" v-on:click="location.href='/'">{{Lang.TestBackToMain}}</button>
                                    <button class="btn btn-outline-light" v-on:click="PageNow = 1">{{Lang.TestSolve}}</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div v-show="PageNow===1">
                        <div id="testHead" class="text-left row pt-2">
                            <h4 class="text-light mt-2 text-center text-md-left" v-if="LevelNow">{{NowLevelIndex+1}}/{{Levels.length}} - {{LevelNow.Name}}</h4>
                            <hr class="bg-light my-2"/>
                        </div>
                        <div id="testMain" class="text-center text-light  DOB">
                            <div v-show="!TestPage" id="ConditionBlock">
                                <div id="ConditionText" class="container">
                                    <h4 v-if="LevelNow">
                                        {{LevelNow.Description}}
                                    </h4>
                                </div>
                            </div>
                            <div v-show="TestPage" id="InteractiveBlock" class="bg-black">
                                <span id="canvaHolder">
                                    
                                </span>
                            </div>
                        </div>
                        <hr class="bg-light"/>
                        <div id="testFooter" class=" d-flex justify-content-around mb-3 ">
                            <button class="btn btn-outline-light" v-on:click="PassLevel()">{{Lang.TestPassButton}}</button>
                            <button class="btn btn-outline-light" v-on:click="TestPage = !TestPage">{{TestPage?Lang.TestTaskButton : Lang.TestSolveButton}}</button>
                        </div>
                    </div>
                    <div v-show="PageNow===2">
                        <div id="endhead" class="text-left row pt-2">
                            <h4 class="text-light mt-2 col-8">{{Lang.TestResults}}</h4>
                            <hr class="bg-light my-2"/>
                        </div>
                        <div id="endMain" class="text-center text-light">
                            <div>
                                <div id="endTextTitle">
                                    <h2>{{Lang.TestPassedTest}}</h2>
                                </div>
                                <hr>
                                <div id="endText">{{Test.FinalText}}</div>
                                <hr>
                                <div id="endParams" class=" d-flex justify-content-around mb-3 ">
                                    <span class="list-group-item bg-dark ">{{Lang.TestResult}}: {{Mark}}</span>
                                    <button class="btn btn-outline-light" v-on:click="location.href='/'">{{Lang.TestBackToMain}}</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div>
                    <div id="head" class="text-left row pt-2">
                        <h4 class="text-light mt-2 col-8">{{Lang.TestTestingHead}}</h4>
                        <hr class="bg-light my-2"/>
                    </div>
                    <div id="startMain" class="text-center text-light">
                        <div>
                            <div id="startTextTitle">
                                <h2>@test.Name</h2>
                            </div>
                            <hr>
                            <div id="startTextDescription">
                                <h4>{{Lang.TestAcceptRepliesClosed}}</h4>
                            </div>
                            <hr>
                            <div id="startParams" class="d-flex justify-content-around mb-3">
                                <button class="btn btn-outline-light" v-on:click="location.href='/'">{{Lang.TestBackToMain}}</button>
                            </div>
                        </div>
                    </div>
                </div>
            }


        </div>
    </div>
</div>