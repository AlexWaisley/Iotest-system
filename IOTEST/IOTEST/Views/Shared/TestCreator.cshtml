@model (IOTEST.IoContext.User User,IOTEST.IoContext.Test Test, int Id)
@{
    ViewData["Title"] = "Test Creator";
}

@section ScriptsBefore
{
    <script src="lib/Pixijs/pixi.js"></script>
    <script src="js/TestCore.js" asp-append-version="true"></script>
}

@section ScriptsAfter
{
    <script src="js/TestCreator.js" asp-append-version="true" type="module"></script>
}

<header>
    <nav class="navbar navbar-dark" style="background-color:rgba(45, 51, 51, 0.50)">
        <div class="container-fluid ">
            <a class="navbar-brand user-select-none DOB d-none d-sm-block" href="/">
                <img src="~/Icons/144x144.png" alt="" width="35" height="35" class="d-inline-block align-top">
                <span>
                    TEST system
                </span>
            </a>
            <span class="DOB navbar-brand float-left ml-auto user-select-none border-1 border-dark" style="cursor: pointer" v-on:click="location.href='/me'">
                <span class="mr-1">@Model.User.FirstName</span>
                <span class="mr-2">@Model.User.FamilyName</span>
                <img src="@Model.User.Image" alt="" width="35" height="35" class="d-inline-block align-top rounded-circle">
            </span>
        </div>
    </nav>
</header>
<script>
const MyMail = "@Model.User.Gmail";
const TestKey = "@Model.Test.Key";
const TestId = "@Model.Id";
</script>
<div id="Page" class="user-select-none container-fluid d-flex justify-content-center" v-cloak>
<div class="fb90">
<div class="DOB m-3" style="background-color:rgba(45, 51, 51, 0.50)" v-show="Core">
<div class="d-flex flex-column">
<div id="boxHeader" class="d-flex justify-content-between">
    <div class="fb20">
        <h4 class="mx-4 my-2 text-light text-center">{{HeaderBoxOne}}</h4>
    </div>
    <div class="d-flex fb60" id="TestMain">
        <input style="border-color: transparent" v-if="Core" v-model="Core.Name" type="text" class="form-control text-center text-light border-1 bg-transparent"/>
    </div>
    <div class="fb20">
        <h4 class="mx-4 my-2 text-light text-center">{{Lang.TestScene}}</h4>
    </div>
</div>
<hr class="mb-1 mt-0">
<div class="d-flex justify-content-between">
<div class="fb20 flex-row justify-content-center">
<div v-if="MenuMode == 0">
    <div class="d-grid justify-content-center">
        <div class="p-3 d-flex justify-content-center">
            <a class="btn btn-outline-light fb70" v-on:click="MenuMode = 1">{{Lang.TestResource}}</a>
        </div>
        <div class="p-3 d-flex justify-content-center">
            <a class="btn btn-outline-light fb70" v-on:click="MenuMode = 2">{{Lang.TestAdd}}</a>
        </div>
        <div class="p-3 d-flex justify-content-center">
            <a class="btn btn-outline-light fb70" v-on:click="MenuMode = 50">{{Lang.TestPosition}}</a>
        </div>
        <div class="p-3 d-flex justify-content-center">
            <a class="btn btn-outline-light fb70" v-on:click="MenuMode = 100">{{Lang.TestTask}}</a>
        </div>

    </div>
</div>
<div v-if="MenuMode == 1">
    <div>
        <div v-bind:style="{'height': MaxHeightUCanva}" class="d-flex justify-content-center">
            <div v-if="AddResourceMode===0" class="d-flex flex-column fb100">
                <div class="overflow-auto flex-grow-1" v-if="Core.Resources.length>0">
                    <div v-for="r in Core.Resources">
                        <div class="d-flex flex-column">
                            <h5 class="text-light text-center">{{r.Name}}</h5>
                            <div class="d-flex justify-content-end">
                                <div class="fb50">
                                    <img class="img-fluid bg-light" src="" v-bind:src="r.Url" alt="#">
                                </div>
                                <div class="fb25 align-self-center ">
                                    <div class="d-flex justify-content-center">
                                        <img v-bind:class="{'disabledTrashBtn': isResUsed(r) }" src="~/Images/delete.png" asp-append-version="true" width="32" height="32" alt="" v-on:click="RemoveResource(r)">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr>
                    </div>
                </div>
                                    <div v-else class="flex-grow-1">
                                        <h4 class="text-light text-center">{{Lang.TestsEmpty}}</h4>
                                    </div>
                <div>
                    <div class="p-1 d-flex justify-content-center">
                        <a class="btn btn-outline-light fb70" v-on:click="AddResource(0)">Публичные</a>
                    </div>
                    <div class="p-1 d-flex justify-content-center">
                        <a class="btn btn-outline-light fb70" v-on:click="AddResource(1)">Личные</a>
                    </div>
                    <hr class="m-1">
                    <div class="p-1 d-flex justify-content-center">
                        <a class="btn btn-outline-light fb70" v-on:click="MenuMode = 0">{{Lang.meGetBack}}</a>
                    </div>
                </div>
            </div>
            <div v-if="AddResourceMode===1" class="fb100 d-flex flex-column">
                <div class="overflow-auto flex-grow-1" v-if="ResourcesAw.length">
                    <div v-for="r in ResSelectorList">
                        <div class="d-flex flex-column justify-content-center">
                            <h5 class="text-light text-center">{{r.Name}}</h5>
                            <div class="d-flex justify-content-end">
                                <div class="fb25 align-self-center">
                                    <div class="d-flex justify-content-center" v-if="!Core.Resources.some(x=>x.Url ===r.Url)">
                                        <img src="~/Images/plus.png" asp-append-version="true" width="32" height="32" alt="" v-on:click="AddResourceToList(r)">
                                    </div>
                                    <div class="d-flex justify-content-center" v-else>
                                        <img src="~/Images/check-mark.png" asp-append-version="true" width="32" height="32" alt="">
                                    </div>
                                </div>
                                <div class="fb50">
                                    <img class="img-fluid bg-light" src="" v-bind:src="r.Url" alt="#">
                                </div>
                                <div class="fb25 align-self-center">
                                    <div class="d-flex justify-content-center" v-if="!r.public&&0">
                                        <img src="~/Images/settings.png" asp-append-version="true" width="32" height="32" alt="" v-on:click="RemoveResource(r)">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr>
                    </div>
                </div>
                <div class="overflow-auto flex-grow-1" v-else>
                     <h5 class="text-light text-center">Ресурси відсутні</h5>
                </div>
                <div>
                    <div class="d-flex justify-content-center my-2" v-if="ResDisMode&&!imgFileLoading">
                        <a class="btn btn-outline-light fb70" v-on:click="AddResourceMode=2">Добавить</a>
                    </div>
                    <div class="d-flex justify-content-center my-2">
                        <a class="btn btn-outline-light fb70" v-on:click="AddResourceToListBack()">Назад</a>
                    </div>
                </div>
            </div>
            <div v-if="AddResourceMode===2" class="fb100 d-flex flex-column">
                <div class="d-flex flex-column fb90">
                    <div class="d-flex flex-column">
                        <h5 v-if="!imgBase64" class="text-center text-light">Добавте изображение</h5>
                        <h5 v-if="imgBase64" class="text-center text-light">Название</h5>
                        <div v-if="imgBase64" class="fb70 d-flex justify-content-center">
                            <input v-model="imgFileLabel" type="text" v-bind:class="{'is-invalid':!NewResNameCorrect}" class="fb70 form-control text-center bg-dark text-light border-1 border-light"/>
                        </div>
                        <label class="fb25" for="CCfile">
                            <img class="img-fluid p-3" src="" v-bind:src="imgBase64?imgBase64:'/Images/FileAddPlus.png'" alt="#">
                            <input id="CCfile" ref='picInp' v-on:change="LoadImg" type="file" class="d-none" accept=".png, .jpg, .jpeg">
                        </label>
                        <div class="d-flex justify-content-center my-2" v-if="NewResNameCorrect">
                            <a class="btn btn-outline-light fb70" v-on:click="CompleteUpload(1)">Добавить</a>
                        </div>

                    </div>
                </div>
                <div>
                    <div class="d-flex justify-content-center my-2">
                        <a class="btn btn-outline-light fb70" v-on:click="CompleteUpload(0)">Назад</a>
                    </div>
                </div>
            </div>


        </div>
    </div>
</div>
<div v-if="MenuMode == 2">
    <div>
        <div class="p-3 d-flex justify-content-center">
            <a class="btn btn-outline-light fb70" v-on:click="AddObjectMenu()">{{Lang.TestObject}}</a>
        </div>
        <div class="p-3 d-flex justify-content-center">
            <a class="btn btn-outline-light fb70" v-on:click="AddText">{{Lang.textText}}</a>
        </div>
        <div class="p-3 d-flex justify-content-center">
            <a class="btn btn-outline-light fb70" v-on:click="MenuMode= 40">{{Lang.TestTrigger}}</a>
        </div>
        <div class="p-3 d-flex justify-content-center">
            <a class="btn btn-outline-light fb70" v-on:click="MenuMode= 60">{{Lang.TestAnimation}}</a>
        </div>
        <hr>
        <div class="p-3 d-flex justify-content-center">
            <a class="btn btn-outline-light fb70" v-on:click="MenuMode = 0">{{Lang.meGetBack}}</a>
        </div>

    </div>
</div>
<div v-if="MenuMode == 20">
    <div class="d-flex flex-column" v-bind:style="{'height': MaxHeightUCanva}">
        <div v-if="Core.Resources.length>0" class="overflow-auto">
            <div class="d-flex flex-column">
                <div v-for="r in Core.Resources" v-on:click="nObj.Resource = r">
                    <div class="d-flex flex-column p-1" v-bind:class="{'bg-success':nObj.Resource==r}">
                        <h6 class="text-light text-center">{{r.Name}}</h6>

                        <div class="d-flex justify-content-center">
                            <img style="width: 0" class="img-fluid bg-light fb70" src="" v-bind:src="r.Url" alt="">
                        </div>
                    </div>
                    <hr class="m-0">
                </div>
            </div>
        </div>
        <div v-else>
            <div>
                <h6 class="text-light text-center">{{Lang.TestRecoursesNotFound}}</h6>
            </div>
        </div>
        <div class="p-1">
            <div class="d-flex justify-content-center">
                <a class="btn btn-outline-light fb70" v-if="nObj.Resource" v-on:click="AddElement">{{Lang.TestAdd}}</a>
            </div>
            <hr class="my-1">
            <div class="d-flex justify-content-center">
                <a class="btn btn-outline-light fb70" v-on:click="MenuMode = 2">{{Lang.meGetBack}}</a>
            </div>
        </div>


    </div>
</div>
<div v-if="MenuMode == 30">
    <div class="p-1 d-flex justify-content-center flex-column">
        <div v-if="EditTextData">
            <div class="d-flex justify-content-around">
                <div class="fb70">
                    <input v-model="EditTextData.text" v-on:input="EditObj.SetText(EditTextData.text,EditTextData.color)" type="text" class="form-control text-center bg-dark text-light border-1 border-light"/>
                </div>
                <div class="fb20 d-flex">
                    <input v-model="EditTextData.color" v-on:input="EditObj.SetText(EditTextData.text,EditTextData.color)" type="color" class="align-self-center form-control form-control-color bg-dark p-0"/>
                </div>
            </div>
            <hr class="mt-2">
        </div>
        <div class="d-flex justify-content-center">
            <div class="fb20 mx-1">
                <h3 class="text-light text-center">X:</h3>
            </div>
            <div class="fb60 mx-1">
                <input v-model.number="EditObj.Sprite.x" min="0" step="10" type="number" class="form-control text-center bg-dark text-light border-1 border-light"/>
            </div>
        </div>
        <div class="d-flex justify-content-center">
            <div class="fb20 mx-1">
                <h3 class="text-light text-center">Y:</h3>
            </div>
            <div class="fb60 mx-1">
                <input v-model.number="EditObj.Sprite.y" min="0" step="10" type="number" class="form-control text-center bg-dark text-light border-1 border-light"/>
            </div>
        </div>
        <div class="d-flex justify-content-between">
            <div class="fb25 mx-1 d-flex">
                <h5 class="text-light text-center align-self-end">{{Lang.TestSize}}:</h5>
            </div>
            <div class="fb50 mx-1">
                <input v-model.number="EditObj.Sprite.scale.x" v-on:input="EditObj.Sprite.scale.y = EditObj.Sprite.scale.x" min="0.01" max="3" step="0.01" type="number" class="form-control text-center bg-dark text-light border-1 border-light"/>
            </div>
        </div>
        <div>
            <input v-model.number="EditObj.Sprite.scale.x" v-on:input="EditObj.Sprite.scale.y = EditObj.Sprite.scale.x" min="0.01" max="3" step="0.01" type="range" class="form-range text-center bg-dark text-light border-1 border-light"/>
        </div>
        <div class="d-flex justify-content-between">
            <div class="fb25 mx-1 d-flex">
                <h5 class="text-light text-center align-self-end">{{Lang.TestRotation}}:</h5>
            </div>
            <div class="fb50 mx-1">
                <input v-model.number="EditObj.RotationVal" min="-1" max="361" step="1" type="number" class="form-control text-center bg-dark text-light border-1 border-light"/>
            </div>
        </div>
        <div class="">
            <input v-model="EditObj.RotationVal" min="0" max="360" step="1" type="range" class="form-range text-center bg-dark text-light border-1 border-light"/>
        </div>
        <hr class="m-0">
        <div class="d-flex justify-content-around">
            <div v-bind:title="Lang.TestVisibility" class="d-flex fb25">
                <input type="checkbox" v-model="EditObj.Sprite.visible" class="custom-control-input d-none" id="editObjVisible">
                <label class="custom-control-label d-flex" for="editObjVisible" draggable="false">
                    <img v-if="EditObj.Sprite.visible" src="/Images/VisBtn.png" asp-append-version="true" alt="#" class="img-fluid">
                    <img v-else src="/Images/UnVisBtn.png" asp-append-version="true" alt="#" class="img-fluid">
                </label>
            </div>
            <div v-bind:title="Lang.TestDraggable" class="d-flex fb25">
                <input type="checkbox" v-model="EditObj.CanMove" class="custom-control-input d-none" id="editObjMovable">
                <label class="custom-control-label  d-flex" for="editObjMovable">
                    <img v-if="EditObj.CanMove" src="/Images/move.png" asp-append-version="true" alt="#" class="img-fluid" draggable="false">
                    <img v-else src="/Images/dont-move.png" asp-append-version="true" alt="#" class="img-fluid">
                </label>
            </div>
            <div v-bind:title="Lang.TestPressed" class="d-flex fb25">
                <input type="checkbox" v-model="EditObj.Sprite.buttonMode" class="custom-control-input d-none" id="editObjBtnMode">
                <label class="custom-control-label  d-flex" for="editObjBtnMode">
                    <img v-if="EditObj.Sprite.buttonMode" src="/Images/PressOn.png" asp-append-version="true" alt="#" class="img-fluid" draggable="false">
                    <img v-else src="/Images/PressOff.png" asp-append-version="true" alt="#" class="img-fluid">
                </label>
            </div>
        </div>
        <hr class="m-0">
        <div class=" text-center">
            <div v-bind:title="Lang.TestTriggerNiy" class="d-flex justify-content-around">
                <input type="checkbox" v-model="EditObj.Triggerable" class="custom-control-input d-none" id="editObjTrg">
                <label class="custom-control-label  d-flex fb25" for="editObjTrg" draggable="false">
                    <img v-if="EditObj.Triggerable" src="/Images/lightning.png" asp-append-version="true" alt="#" class="img-fluid">
                    <img v-else src="/Images/x.png" asp-append-version="true" alt="#" class="img-fluid">
                </label>
                <label for="editObjTrg" class="text-light fb70  h5 align-self-center m-0">{{Lang.TestTriggerNiy}}</label>
            </div>
        </div>
        <hr class="m-0">
        <div class=" text-center p-1">
            <div class="d-flex justify-content-evenly">
                <span v-on:click="MoveZObject(EditObj,0)">
                    <svg width="32" height="32" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                         viewBox="0 0 330 330" xml:space="preserve" style="fill: #567478">
                        <path d="M325.607,79.393c-5.857-5.857-15.355-5.858-21.213,0.001l-139.39,139.393L25.607,79.393
                     	c-5.857-5.857-15.355-5.858-21.213,0.001c-5.858,5.858-5.858,15.355,0,21.213l150.004,150c2.813,2.813,6.628,4.393,10.606,4.393
                     	s7.794-1.581,10.606-4.394l149.996-150C331.465,94.749,331.465,85.251,325.607,79.393z"/>
                    </svg>
                </span>
                <span v-on:click="MoveZObject(EditObj,1)">
                    <svg width="32" height="32" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                         viewBox="0 0 330 330" xml:space="preserve" style="fill: #567478">
                        <path d="M325.606,229.393l-150.004-150C172.79,76.58,168.974,75,164.996,75c-3.979,0-7.794,1.581-10.607,4.394
                                     	l-149.996,150c-5.858,5.858-5.858,15.355,0,21.213c5.857,5.857,15.355,5.858,21.213,0l139.39-139.393l139.397,139.393
                                     	C307.322,253.536,311.161,255,315,255c3.839,0,7.678-1.464,10.607-4.394C331.464,244.748,331.464,235.251,325.606,229.393z"/>
                    </svg>
                </span>
            </div>
        </div>
    </div>
    <div class="p-2 d-flex justify-content-center">
        <a class="btn btn-outline-light" v-on:click="MenuMode = 0; EditObj = null">{{Lang.meGetBack}}</a>
    </div>
</div>
<div v-if="MenuMode == 40">
    <div class="p-1 row d-flex justify-content-center">
        <div style="max-height: 20vh; overflow-x: hidden">
            <div v-for="r in Core.Triggers">
                <div class="p-1 row">
                    <div class="col-4">
                        <div class="d-flex justify-content-center">
                            <img src="~/Images/trash.svg" class="" width="32" height="32" alt="" v-on:click="DestroyTrigger(r)">
                        </div>
                    </div>
                    <div class="col-4" v-on:mouseover="r.Hover = true" v-on:mouseleave="r.Hover = false">
                        <h6 class="text-light text-center">{{r.Id}}</h6>
                    </div>
                    <div class="col-4">
                        <div class="d-flex justify-content-center">
                            <img src="~/Images/application.svg" class="" width="32" height="32" alt="" v-on:click="EditTrigger(r)">
                        </div>

                    </div>
                </div>
                <hr>
            </div>
        </div>

        <div class="p-3 d-flex justify-content-center">
            <a class="btn btn-outline-light" v-on:click="AddTrigger">{{Lang.TestAdd}}</a>
        </div>
    </div>
    <div class="p-3">
        <a class="btn btn-outline-light" v-on:click="MenuMode = 2">{{Lang.meGetBack}}</a>
    </div>
</div>
<div v-if="MenuMode == 41">
    <div class="p-1 row d-flex justify-content-center">
        <div class="col-4">
            <h3 class="text-light text-center">X:</h3>
        </div>
        <div class="col-8">
            <input v-model.number="EditedTrigger.X" min="0" step="25" type="number" class="form-control text-center bg-dark text-light border-1 border-light"/>
        </div>
        <div class="col-4">
            <h3 class="text-light text-center">Y:</h3>
        </div>
        <div class="col-8">
            <input v-model.number="EditedTrigger.Y" min="0" step="25" type="number" class="form-control text-center bg-dark text-light border-1 border-light"/>
        </div>

        <div class="col-12">
            <h5 class="text-light text-center">{{Lang.TestSize}}: {{EditedTrigger.Size}} </h5>
        </div>

        <div class="col-12">
            <input v-model.number="EditedTrigger.Size" min="10" max="1000" step="0.01" type="range" class="form-range text-center bg-dark text-light border-1 border-light"/>
        </div>
        <div class="col-10 offset-1 text-center p-1">
            <div class="form-check">
                <label for="editTrgVisible" class="text-light">{{Lang.TestVisibility}}</label>
                <input id="editTrgVisible" v-model="EditedTrigger.Visual" type="checkbox" class="form-check-input">
            </div>
        </div>
        <div class="col-10 offset-1 text-center p-1">
            <div class="form-check">
                <label for="editTrgMagnetic" class="text-light">{{Lang.TestMagnetic}}</label>
                <input id="editTrgMagnetic" v-model="EditedTrigger.Magnetic" type="checkbox" class="form-check-input">
            </div>
        </div>
        <hr>
        <div class="p-3">
            <a class="btn btn-outline-light" v-on:click="MenuMode = 40">{{Lang.meGetBack}}</a>
        </div>
    </div>
</div>
<div v-if="MenuMode == 50">
    <div class="p-1 row d-flex justify-content-center">

        <span class=" d-flex justify-content-center">
            <h6 class="text-light text-center">
                {{Lang.TestALotOfText}}
                <br>
                <small>{{Lang.TestCorrectAnswer}}:</small>
            </h6>
        </span>
        <span class=" d-flex justify-content-center">
            <small class="text-light  m-0" v-if="Core.CorrectState">
                {{Core.CorrectState.trg}}
            </small>
            <h6 class="text-light m-0" v-else>
                {{Lang.TestMissing}}
            </h6>
        </span>
        <hr class="m-0">
        <span class=" d-flex justify-content-center">
            <h6 class="text-light text-center">
                <small>{{Lang.TestCurrent}}:</small>
            </h6>
        </span>
        <span class=" d-flex justify-content-center">
            <small class="text-light  m-0" v-if="Core.GetState()">
                {{Core.GetState().trg}}
            </small>
            <h6 class="text-light  m-0" v-else>
                {{Lang.TestNoTriggers}}
            </h6>
        </span>

        <hr>
        <div class="p-3 d-flex justify-content-center">
            <a class="btn btn-outline-light" v-on:click="Core.CorrectState = Core.GetState()">{{Lang.TestSave}}</a>

        </div>
        <div class="p-3 d-flex justify-content-center">
            <a class="btn btn-outline-light" v-on:click="MenuMode = 0">{{Lang.meGetBack}}</a>
        </div>
    </div>
</div>
<div v-if="MenuMode == 60">
    <div class="p-1 row d-flex justify-content-center">
        <div class="p-1 row d-flex justify-content-center">
            <div style="max-height: 20vh; overflow-x: hidden">
                <div v-for="(r,i) in Core.Animations">
                    <div class="p-1 row">
                        <div class="col-4">
                            <div class="d-flex justify-content-center">
                                <img src="~/Images/trash.svg" class="" width="32" height="32" alt="" v-on:click="DestroyAnimation(r)">
                            </div>
                        </div>
                        <div class="col-4">
                            <h6 class="text-light text-center">{{i+1}}</h6>
                        </div>
                        <div class="col-4">
                            <div class="d-flex justify-content-center">
                                <img src="~/Images/application.svg" class="" width="32" height="32" alt="" v-on:click="EditAnimation(r)">
                            </div>
                        </div>
                    </div>
                    <hr>
                </div>
            </div>
        </div>
        <hr>
        <div class="p-3 d-flex justify-content-center">
            <a class="btn btn-outline-light" v-on:click="AddAnimation">{{Lang.TestAdd}}</a>

        </div>
        <div class="p-3 d-flex justify-content-center">
            <a class="btn btn-outline-light" v-on:click="MenuMode = 0">{{Lang.meGetBack}}</a>
        </div>
    </div>
</div>
<div v-if="MenuMode == 61">
    <div class="p-1 row d-flex justify-content-center" style="max-height: 60vh; overflow-x: hidden; overflow-y: auto">
        <div>
            <h3 class="text-light text-center">{{Lang.TestTaskAnim}}:</h3>
            <div style="max-height: 15vh; overflow-x: hidden; overflow-y: auto" v-if="EditAnimData.Activators.length">
                <div v-for="ax in EditAnimData.Activators" class="m-1 p-1 ">
                    <div class="form-group">
                        <select v-model="ax.Event" class="text-center text-light bg-transparent form-control">
                            <option v-for="nxd in 4" class="bg-dark text-light" v-bind:value="nxd-1">{{Animation.ActivatorsNames(nxd-1)}}</option>
                        </select>
                        <div v-if="ax.Event ===3||ax.Event ===2" class="d-flex flex-wrap">
                            <div v-for="(an,i) in ax.Selector.concat([''])" class="col-4 m-1">
                                <input v-model.number="ax.Selector[i]" v-on:change="CheckEventSelectors(ax)" class="form-control text-center text-light border-1 bg-transparent mt-1"/>
                            </div>
                        </div>
                        <div class="d-flex justify-content-center">
                            <img src="~/Images/trash.svg" class="" width="32" height="32" alt="" v-on:click="EditAnimData.Activators = EditAnimData.Activators.filter(function(value){return value !==ax;});">
                        </div>
                        <hr>
                    </div>
                </div>
            </div>
            <h6 class="text-light m-0 text-center" v-else>
                Умов не виявлено
            </h6>
            <div class="p-3 d-flex justify-content-center">
                <a class="btn btn-outline-light" v-on:click="AddActivator">Додати умову</a>
            </div>
        </div>
        <hr>
        <div>
            <h3 class="text-light text-center"> Події:</h3>
            <div style="max-height: 15vh; overflow-x: hidden; overflow-y: auto" v-if="EditAnimData.EventActions.length">
                <div v-for="ax in EditAnimData.EventActions" class="m-1 p-1">
                    <div class="form-group">
                        <select v-model="ax.Event" class="text-center text-light bg-transparent form-control">
                            <option v-for="nxd in 3" class="bg-dark text-light" v-bind:value="nxd-1">{{Animation.ActionNames(nxd-1)}}</option>
                        </select>
                        Об'єкти:
                        <div class="d-flex flex-wrap">
                            <div v-for="(an,i) in ax.Selector.concat([''])" class="col-4 m-1">
                                <input v-model.number="ax.Selector[i]" v-on:change="CheckEventSelectors(ax)" class="form-control text-center text-light border-1 bg-transparent mt-1"/>
                            </div>
                        </div>
                        Значення:
                        <div class="d-flex flex-wrap">
                            <div v-for="(an,i) in 2" class="col-4 m-1">
                                <input v-model.number="ax.Value[i]" class="form-control text-center text-light border-1 bg-transparent mt-1"/>
                            </div>
                        </div>

                        <div class="d-flex justify-content-center">
                            <img src="~/Images/trash.svg" class="" width="32" height="32" alt="" v-on:click="EditAnimData.EventActions = EditAnimData.EventActions.filter(function(value){return value !==ax;});">
                        </div>

                    </div>
                </div>
            </div>
            <h6 class="text-light m-0 text-center" v-else>
                Подій не виявлено
            </h6>
            <div class="p-3 d-flex justify-content-center">
                <a class="btn btn-outline-light" v-on:click="AddEventAction">Додати подію</a>
            </div>
        </div>
        <hr>
        <div class="p-3 d-flex justify-content-center">
            <a class="btn btn-outline-light" v-on:click="MenuMode = 60">{{Lang.meGetBack}}</a>
        </div>
    </div>
</div>
<div v-if="MenuMode == 100">
    <div class="p-1 row d-flex justify-content-center">
        <div>
            <h3 class="text-light text-center">{{Lang.textsText}}:</h3>
            <textarea v-model="Core.Description" class="form-control text-center bg-dark text-light border-2 border-light"></textarea>
        </div>

        <hr>
        <div class="p-3 d-flex justify-content-center">
            <a class="btn btn-outline-light" v-on:click="MenuMode = 0">{{Lang.meGetBack}}</a>
        </div>
    </div>
</div>
</div>
<div>
    <div class="text-center text-light  DOB">
        <div id="InteractiveBlock">
            <canvas class="TestScreen"></canvas>
        </div>
    </div>
</div>
<div class="fb20" v-if="Core">
    <div style="overflow-x: hidden; overflow-y: auto;" v-bind:style="{'height': MaxHeightUCanva}" class="d-flex flex-column  bg-dark">
        <div v-for="obj in Core.Request('getObjects')" v-if="obj.Resource">
            <div class="p-1">
                <div class="">
                    <h6 class="text-light text-center">
                        <span v-if="obj.Resource.Name">
                            {{obj.Resource.Name}}
                        </span>
                        <span v-else>
                            {{obj.GetText().text}}
                        </span>
                        - {{obj.Id}}
                    </h6>
                    <div>
                        <div class="d-flex justify-content-between">
                            <div class="fb25 align-self-center">
                                <div class="d-flex justify-content-center">
                                    <img v-if="obj!=EditObj" src="~/Images/settings.png" asp-append-version="true" class="" width="32" height="32" alt="" v-on:click="EditObject(obj)">
                                </div>
                            </div>
                            <div class="fb25 align-self-center">
                                <span v-if="obj.Resource.Name" class="d-flex justify-content-center">
                                    <img class="img-fluid bg-light" style="min-height: 35px;min-width: 35px" src="" v-bind:src="obj.Resource.Url" alt="">
                                </span>
                                <span v-else class="d-flex justify-content-center">
                                    <svg class="img-fluid" width="35" height="35" viewBox="0 0 14 15">
                                        <g id="Icons" stroke-width="1" fill="none" fill-rule="evenodd">
                                            <g transform="translate(-309.000000, -1530.000000)">
                                                <g transform="translate(100.000000, 1428.000000)">
                                                    <g transform="translate(204.000000, 98.000000)">
                                                        <g>
                                                            <polygon points="0 0 24 0 24 24 0 24"></polygon>
                                                            <path d="M5,18 C5,18.55 5.45,19 6,19 L18,19 C18.55,19 19,18.55 19,18 C19,17.45 18.55,17 18,17 L6,17 C5.45,17 5,17.45 5,18 Z M9.5,12.8 L14.5,12.8 L15.16,14.4 C15.31,14.76 15.66,15 16.05,15 C16.74,15 17.2,14.29 16.93,13.66 L13.05,4.69 C12.87,4.27 12.46,4 12,4 C11.54,4 11.13,4.27 10.95,4.69 L7.07,13.66 C6.8,14.29 7.27,15 7.96,15 C8.35,15 8.7,14.76 8.85,14.4 L9.5,12.8 Z M12,5.98 L13.87,11 L10.13,11 L12,5.98 Z" v-bind:fill="obj.GetText().color"></path>
                                                        </g>
                                                    </g>
                                                </g>
                                            </g>
                                        </g>
                                    </svg>
                                </span>
                            </div>
                            <div class="fb25 align-self-center">
                                <div class="d-flex justify-content-center">
                                    <img src="~/Images/delete.png" asp-append-version="true" class="" width="32" height="32" alt="" v-on:click="DestroyObject(obj)">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <hr class="m-0">
        </div>
    </div>
</div>
</div>
<hr class="my-1">
<div class="container" v-if="Core">
    <div class="d-flex p-1 pb-2 justify-content-between">
        <div class="m-1">
            <a class="btn btn-outline-light" href="/tests">{{Lang.TestExit}}</a>
        </div>
        <div class="m-1">
            <button class="btn btn-outline-light" v-on:click="SaveTest" v-bind:class="{'disabled': NeedSave()}">{{Lang.TestSave}}</button>
        </div>
    </div>
</div>
</div>
</div>
</div>
</div>